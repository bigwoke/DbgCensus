@using DbgCensus.Rest.Abstractions.Queries
@using DbgCensus.Rest.Abstractions

@page "/"
@inject IJSRuntime JSRuntime
@inject ICensusRestClient CensusRestClient
@inject IQueryBuilderFactory QueryFactory

<h1>Query Online Outfit Members</h1>



<CopyToClipboard Text="@_queryStringOne" />

<h1>Query String Two</h1>

<CopyToClipboard Text="@_queryStringTwo" />

<h1>Join String</h1>

<CopyToClipboard Text="@_joinString" />

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    private string _queryStringOne;
    private string _queryStringTwo;
    private string _joinString;

    protected override void OnInitialized()
    {
        _queryStringOne = QueryFactory.Get()
            .OnCollection("outfit")
            .Where("alias_lower", SearchModifier.EQUALS, "uvoc")
            .AddResolve("leader", "name")
            .AddResolve("member_online_status")
            .HasFields("name_lower")
            .HideFields("name")
            .ConstructEndpoint().AbsoluteUri;

        _queryStringTwo = QueryFactory.Get()
            .OnCollection("outfit")
            .Where("member_count", SearchModifier.GREATER_THAN, 100)
            .WithSortOrder("member_count", SortOrder.Ascending)
            .WithSortOrder("name_lower", SortOrder.Ascending)
            .WithLimit(10)
            .WithTimings()
            .WithStartIndex(9)
            .ConstructEndpoint().AbsoluteUri;

        IJoinBuilder join = QueryFactory.Get().AddJoin("outfit").IsList().InjectAt("injectedHere").HideFields("show1", "show2");

        join.AddNestedJoin("character").Where("name", "Falcon", SearchModifier.EQUALS);
        join.AddNestedJoin("item").OnField("item_id");

        _joinString = join.ToString();
    }
}
